[gd_scene load_steps=9 format=3 uid="uid://d215x53gvybky"]

[ext_resource type="Texture2D" uid="uid://dowfc81kafhnk" path="res://assets/Cannon_Game/cannon body.png" id="1_o1g55"]
[ext_resource type="Texture2D" uid="uid://b1lsbaaj37mn3" path="res://assets/Cannon_Game/trajectory dot.png" id="2_ee8mj"]
[ext_resource type="Shader" path="res://Scene Folder/Minigames/Cannonball_Game/GameManager/trajection.gdshader" id="2_inmcu"]
[ext_resource type="Texture2D" uid="uid://dwgvf5p4iirma" path="res://assets/Cannon_Game/cannnon wheel.png" id="4_2rgn1"]
[ext_resource type="PackedScene" uid="uid://b1k24nnqgwa42" path="res://Scene Folder/Minigames/Cannonball_Game/Background/tile_map.tscn" id="5_2pikp"]

[sub_resource type="GDScript" id="GDScript_3go7r"]
script/source = "extends Node2D

@onready var power_gauge = get_node(\"../PowerGauge/gaugebar/power_gauge\") # Reference to the power gauge
@onready var cannonball_scene: PackedScene = preload(\"res://Scene Folder/Minigames/Cannonball_Game/Cannonball/Cannonball.tscn\")  # Preload the cannonball scene

@onready var env_gravity : float = 981
@onready var cannon_tip_position : Vector2 = self.get_node(\"./dart_spawn\").position  # Replace with the actual position of the cannon's tip
@onready var trajectory : Line2D = self.get_node(\"Trajectory\")
@onready var collision_test : CharacterBody2D = self.get_node(\"Trajectory/CollisionTest\")

@onready var timer = $Timer # Matching the amount of time that the orb stays in the scene before being removed
@onready var spawn_ball_delay = false # Bool to trigger unhappy ball spawn over bag after a time delay (mitigates one-ball-in-scene to trigger bag issue)

# track the phase of the bag
var bag_phase = 0
var bag_attempts = 3

signal update_counter
signal update_orb

func _ready() -> void:
	trajectory.visible = false
	if power_gauge == null:
		# print(\"Power gauge not found!\")
		pass
	timer.timeout.connect(_on_PauseTimer_timeout)

func _process(_delta: float) -> void:
	var bag = get_tree().get_first_node_in_group(\"Bags\")
	if bag:
		if !bag.get_parent().is_connected(\"bag_triggered\", bag_hit):
			bag.get_parent().connect(\"bag_triggered\", bag_hit)
	
	if Input.is_action_just_pressed(\"cannon shoot\"):  # Assuming you have an input action called \"shoot\"
		power_gauge.start_fluctuating()
		trajectory.visible = true
		collision_test.get_child(0).disabled = false
		
	# Stop fluctuating and shoot the cannon when space bar is released
	if Input.is_action_just_released(\"cannon shoot\"):
		trajectory.visible = false
		bag_attempts -= 1
		var power = power_gauge.stop_fluctuating() # Get the last value before resetting
		shoot_cannon(power)  #Shoot using the current power
		collision_test.get_child(0).disabled = true
	
	if Input.is_action_pressed(\"up\"):
		var rot = self.get_rotation()
		rot = rot - _delta if rot > -(PI/2) else -(PI/2)
		self.set_rotation(rot)
	if Input.is_action_pressed(\"down\"):
		var rot = self.get_rotation()
		rot = rot + _delta if rot < 0 else 0
		self.set_rotation(rot)
	
	cannon_tip_position = self.get_node(\"dart_spawn\").position

func _physics_process(_delta):
	
	var max_line_dots = 300
	trajectory.clear_points()
	var rot = get_rotation()
	var pos = Vector2(cos(rot), sin(rot)) * 60
	trajectory.set_rotation(- self.rotation)
	
	var vel = Vector2(1, 0).rotated(rotation) * power_gauge.last_value * 17
	for dot in max_line_dots:
		trajectory.add_point(pos)
		vel.y += env_gravity * _delta
		pos += vel * _delta
		collision_test.position = pos
		
		var collision = collision_test.move_and_collide(vel * _delta, false, true, true)
		
		if collision: break

func shoot_cannon(power: float):
	# Instance a new cannonball
	var cannonball = cannonball_scene.instantiate() as RigidBody2D
	var cannonball_sprite = cannonball.get_node(\"dart\") as Sprite2D;
	cannonball.name = \"Cannonball\"
	
	# Set its starting position at the cannon's tip
	cannonball.position = global_position + cannon_tip_position.rotated(rotation)  # Adjust to the cannon's rotation
	
	# Add the cannonball to the scene
	get_parent().add_child(cannonball)
	cannonball_sprite.frame = get_node(\"..\").current_bag_index
	
	# Calculate velocity based on the cannon's direction and power
	var direction = Vector2(1, 0).rotated(rotation)  # Direction the cannon is facing
	cannonball.linear_velocity = direction * power * 25  # Multiply by a factor to adjust speed
	
	#Start shot timer
	start_shot_attempt_timer()

func start_shot_attempt_timer():
	timer.start() #Start when shot is fired // matches the duration of the cannon ball spawn of 3 seconds
	
func start_PauseTimer():
	set_process(false) #these are not working for some reason, but I do not know why.
	timer.start()

func _on_PauseTimer_timeout():
	if (bag_attempts == 0):
		if (spawn_ball_delay):
			spawn_ball_delay = false
			get_parent().perform_auto_drop()
		else:
			timer.wait_time = 0.5
			timer.start()
			start_PauseTimer()
			spawn_ball_delay = true
	else:
		timer.wait_time = 3
		timer.start()
		set_process(true)
		
func bag_hit():
	#emit signal to powergauge/pinkcounter to change sprite
	emit_signal(\"update_counter\")
	bag_attempts += 3
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_q06xq"]
shader = ExtResource("2_inmcu")
shader_parameter/scrolling_speed = 2.0

[sub_resource type="CircleShape2D" id="CircleShape2D_q0ujv"]

[node name="cannon" type="Node2D" groups=["Cannon"]]
z_index = -1
scale = Vector2(0.99761, 1)
script = SubResource("GDScript_3go7r")

[node name="cannon wheel" type="Sprite2D" parent="."]
top_level = true
z_index = 1
y_sort_enabled = true
texture_filter = 1
position = Vector2(201, 668)
scale = Vector2(0.2, 0.2)
texture = ExtResource("4_2rgn1")

[node name="cannon body" type="Sprite2D" parent="."]
z_index = -1
position = Vector2(-70.1677, 42)
rotation = 3.14159
scale = Vector2(0.172, 0.178)
texture = ExtResource("1_o1g55")
offset = Vector2(-500, 250)
flip_h = true

[node name="collision" type="CollisionPolygon2D" parent="."]
visible = false
position = Vector2(14.0335, -17)
rotation = -0.326642
polygon = PackedVector2Array(-40, 0, -24, -16, 0, -24, 16, -24, 24, -32, 32, -32, 40, -16, 40, -8, 40, 0, 16, 0, 8, 8, 0, 16, 0, 24, 8, 24, 8, 32, -40, 32, -40, 24, -24, 16, -32, 16, -40, 8)

[node name="Trajectory" type="Line2D" parent="."]
texture_repeat = 2
material = SubResource("ShaderMaterial_q06xq")
points = PackedVector2Array(10.1006, -29)
width = 30.0
texture = ExtResource("2_ee8mj")
texture_mode = 1

[node name="CollisionTest" type="CharacterBody2D" parent="Trajectory"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Trajectory/CollisionTest"]
shape = SubResource("CircleShape2D_q0ujv")
disabled = true

[node name="dart_spawn" type="Marker2D" parent="."]
position = Vector2(63.0833, -3.53553)
rotation = 0.785398

[node name="Timer" type="Timer" parent="."]
wait_time = 3.0
one_shot = true

[node name="PauseTimer" type="Timer" parent="."]
wait_time = 8.0
one_shot = true

[node name="background" parent="." instance=ExtResource("5_2pikp")]
layer = -1
visible = false
