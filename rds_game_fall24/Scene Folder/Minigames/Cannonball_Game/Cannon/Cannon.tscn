[gd_scene load_steps=9 format=3 uid="uid://d215x53gvybky"]

[ext_resource type="Texture2D" uid="uid://cblii2b26c5c5" path="res://assets/working_assets/Cannon Game Asset/cannon.png" id="1_2rs0g"]
[ext_resource type="Texture2D" uid="uid://b1lsbaaj37mn3" path="res://assets/cannon_game_draft_assets/trajectory dot.png" id="2_ee8mj"]
[ext_resource type="Shader" path="res://Scene Folder/Minigames/Cannonball_Game/GameManager/trajection.gdshader" id="2_inmcu"]

[sub_resource type="GDScript" id="GDScript_3go7r"]
script/source = "extends Node2D

@onready var power_gauge = get_node(\"../PowerGauge/power_gauge\") # Reference to the power gauge
@onready var cannonball_scene: PackedScene = preload(\"res://Scene Folder/Minigames/Cannonball_Game/Cannonball/Cannonball.tscn\")  # Preload the cannonball scene

@onready var env_gravity : float = 981
@onready var cannon_tip_position : Vector2 = self.get_node(\"./dart_spawn\").position  # Replace with the actual position of the cannon's tip
@onready var trajectory : Line2D = self.get_node(\"Trajectory\")
@onready var collision_test : CharacterBody2D = self.get_node(\"Trajectory/CollisionTest\")

# track the phase of the bag
var bag_phase = 0

func _ready() -> void:
	trajectory.visible = false
	if power_gauge == null:
		# print(\"Power gauge not found!\")
		pass

func _process(_delta: float) -> void:
	if Input.is_action_just_pressed(\"cannon shoot\"):  # Assuming you have an input action called \"shoot\"
		power_gauge.start_fluctuating()
		trajectory.visible = true
		collision_test.get_child(0).disabled = false
		
	# Stop fluctuating and shoot the cannon when space bar is released
	if Input.is_action_just_released(\"cannon shoot\"):
		trajectory.visible = false
		var power = power_gauge.stop_fluctuating() # Get the last value before resetting
		shoot_cannon(power)  #Shoot using the current power
		collision_test.get_child(0).disabled = true
	
	if Input.is_action_pressed(\"up\"):
		var rot = self.get_rotation()
		rot = rot - _delta if rot > -(PI/2) else -(PI/2)
		self.set_rotation(rot)
	if Input.is_action_pressed(\"down\"):
		var rot = self.get_rotation()
		rot = rot + _delta if rot < 0 else 0
		self.set_rotation(rot)
	
	cannon_tip_position = self.get_node(\"dart_spawn\").position

func _physics_process(_delta):
	
	var max_line_dots = 300
	trajectory.clear_points()
	var pos = trajectory.position
	trajectory.set_rotation(- self.rotation)
	
	var vel = Vector2(1, 0).rotated(rotation) * power_gauge.last_value * 17
	for dot in max_line_dots:
		trajectory.add_point(pos)
		vel.y += env_gravity * _delta
		pos += vel * _delta
		collision_test.position = pos
		
		var collision = collision_test.move_and_collide(vel * _delta, false, true, true)
		
		if collision: break

func shoot_cannon(power: float):
	# Instance a new cannonball
	var cannonball = cannonball_scene.instantiate() as RigidBody2D
	cannonball.name = \"Cannonball\"
	
	# Set its starting position at the cannon's tip
	cannonball.position = global_position + cannon_tip_position.rotated(rotation)  # Adjust to the cannon's rotation
	
	# Add the cannonball to the scene
	get_parent().add_child(cannonball)
	
	# Calculate velocity based on the cannon's direction and power
	var direction = Vector2(1, 0).rotated(rotation)  # Direction the cannon is facing
	cannonball.linear_velocity = direction * power * 25  # Multiply by a factor to adjust speed
"

[sub_resource type="AtlasTexture" id="AtlasTexture_fs2dp"]
atlas = ExtResource("1_2rs0g")
region = Rect2(256, 256, 128, 128)

[sub_resource type="SpriteFrames" id="SpriteFrames_0rglo"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_fs2dp")
}],
"loop": true,
"name": &"static",
"speed": 5.0
}]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_q06xq"]
shader = ExtResource("2_inmcu")
shader_parameter/scrolling_speed = 2.0

[sub_resource type="CircleShape2D" id="CircleShape2D_q0ujv"]

[node name="cannon" type="Node2D"]
scale = Vector2(0.99761, 1)
script = SubResource("GDScript_3go7r")

[node name="cannon body" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_0rglo")
animation = &"static"
frame_progress = 0.488216
flip_h = true

[node name="collision" type="CollisionPolygon2D" parent="."]
polygon = PackedVector2Array(-40, 0, -24, -16, 0, -24, 16, -24, 24, -32, 32, -32, 40, -16, 40, -8, 40, 0, 16, 0, 8, 8, 0, 16, 0, 24, 8, 24, 8, 32, -40, 32, -40, 24, -24, 16, -32, 16, -40, 8)

[node name="Trajectory" type="Line2D" parent="."]
texture_repeat = 2
material = SubResource("ShaderMaterial_q06xq")
position = Vector2(32, -16)
width = 30.0
texture = ExtResource("2_ee8mj")
texture_mode = 1

[node name="CollisionTest" type="CharacterBody2D" parent="Trajectory"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Trajectory/CollisionTest"]
shape = SubResource("CircleShape2D_q0ujv")
disabled = true

[node name="dart_spawn" type="Marker2D" parent="."]
position = Vector2(32, -16)
